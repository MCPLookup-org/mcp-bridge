version: '3.8'

services:
  # MCPLookup Bridge - Main service
  mcp-bridge:
    build:
      context: .
      dockerfile: Dockerfile
    image: mcplookup/mcp-bridge:latest
    container_name: mcp-bridge
    restart: unless-stopped
    
    # Environment variables
    environment:
      - NODE_ENV=production
      - MCPLOOKUP_BASE_URL=https://mcplookup.org/api/v1
      # Set your API key here or use .env file
      - MCPLOOKUP_API_KEY=${MCPLOOKUP_API_KEY:-}
      # Enable HTTP mode for remote access
      - MCP_HTTP_MODE=${MCP_HTTP_MODE:-false}
      - PORT=3000
    
    # Port mapping (if running in HTTP mode)
    ports:
      - "3000:3000"
    
    # Health check
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Bridge is healthy')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Read-only root filesystem for security
    read_only: true
    
    # Temporary filesystems for writable areas
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    
    # Labels
    labels:
      - "com.mcplookup.service=mcp-bridge"
      - "com.mcplookup.version=1.0.0"
      - "traefik.enable=true"
      - "traefik.http.routers.mcp-bridge.rule=Host(`bridge.mcplookup.org`)"
      - "traefik.http.services.mcp-bridge.loadbalancer.server.port=3000"

  # Optional: Redis for caching (if needed)
  redis:
    image: redis:7-alpine
    container_name: mcp-bridge-redis
    restart: unless-stopped
    
    # Redis configuration
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    
    # Volumes for persistence
    volumes:
      - redis_data:/data
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    
    # Health check
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    
    # Security
    security_opt:
      - no-new-privileges:true

# Named volumes
volumes:
  redis_data:
    driver: local

# Networks
networks:
  default:
    name: mcp-bridge-network
    driver: bridge
